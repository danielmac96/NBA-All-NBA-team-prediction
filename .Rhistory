#View(RSD[[1]])
RSD[[1]] <- RSD[[1]][1:32,c(2,7,8,10,17,18,20,25)]
RSD[[2]] <- RSD[[2]][1:32,c(2,5,6,9)]
RSD[[3]] <- RSD[[3]][2:33,c(2,6,12)]
RSD[[4]] <- RSD[[4]][2:33,c(2,6,7,9,12)]
#View(RSD[[4]])
def <- RSD %>% reduce(inner_join, by = "Tm")
colnames(def) <- paste('def',names(def),sep = " ")
#View(def)
#------------------------------------------------------------------------------------
colnames(off)[1] <- "Tm"
colnames(def)[1] <- "Tm"
RS <- merge(off, def, by = "Tm")
#----------------------------------
PS <- website %>% read_html() %>% html_nodes(xpath = '//comment()') %>%    # select comments
html_text() %>%    # extract comment text
paste(collapse = '') %>%    # collapse to single string
read_html() %>%    # reread as HTML
html_nodes('table#playoff_results') %>%    # select desired node
html_table()
PS <- PS[[1]]
PS <- PS[,-c(2,3,7)]
colnames(PS) <- c("Round","Tm","awayteam","L","PtsW","PtsL")
#View(PS)
#-------------------------------------
data <- merge(merge(RS,PS,by = "Tm"),RS, by.x = c("L"), by.y = c("Tm")) #winner .x loser .y
#str(data)
#names(data)
data[,c(11,12,25,26,43,44,57,58)] <-lapply(data[,c(11,12,25,26,43,44,57,58)], function(x) as.numeric(gsub("\\%", "", x)))
#data$awayteam <- as.numeric(factor(data$awayteam))
data$totalpts <- data$PtsL + data$PtsW
data$spread <- data$PtsW - data$PtsL
data$Round <- factor(data$Round)
data$L <- factor(data$L)
data$Tm <- factor(data$Tm)
data$awayteam <- factor(data$awayteam)
data$Round <- factor(data$Round)
#str(data)
#i=2020 # experiment for assignment of data in for loop
assign(paste("data",i, sep = ""),data) #for naming in for loop for each year
print(paste("data table for ",i," comlpete"))
}
masterframe <- data.frame()
for(i in startyr:endyr){
newframe <- eval(parse(text = paste("data",i, sep = "")))
masterframe <- rbind(newframe, masterframe)
}
#sub col names characters that may cause problems
masterframe <- mutate_if(masterframe,is.character,as.numeric)
names(masterframe)<-gsub(" ","_",names(masterframe))
names(masterframe)<-gsub("%","",names(masterframe))
masterframe$oufactor <- factor(ifelse(masterframe$totalpts > 56, 1,0))
masterframe$spreadfactor <- factor(ifelse(masterframe$spread > 3, 1,0))
#View(masterframe)
summary(masterframe)
PS <- rbind(PS, c("Superbowl", "Kansas City Chiefs", "N","Tampa Bay Buccaneers", NA, NA))
dataSB <- merge(merge(RS,PS,by = "Tm"),RS, by.x = c("L"), by.y = c("Tm")) #winner .x loser .y
dataSB[,c(11,12,25,26,43,44,57,58)] <-lapply(dataSB[,c(11,12,25,26,43,44,57,58)], function(x) as.numeric(gsub("\\%", "", x)))
#dataSB$awayteam <- as.numeric(factor(dataSB$awayteam))
str(dataSB)
dataSB$Round <- factor(dataSB$Round)
dataSB$L <- factor(dataSB$L)
dataSB$Tm <- factor(dataSB$Tm)
dataSB$awayteam <- factor(dataSB$awayteam)
dataSB$Round <- factor(dataSB$Round)
dataSB <- mutate_if(dataSB,is.character,as.numeric)
dataSB$totalpts <- dataSB$PtsL + dataSB$PtsW
dataSB$spread <- dataSB$PtsW - dataSB$PtsL
names(dataSB)<-gsub(" ","_",names(dataSB))
names(dataSB)<-gsub("%","",names(dataSB))
#str(dataSB)
dataSB$oufactor <- factor(ifelse(dataSB$totalpts > 56, 1,0))
dataSB$spreadfactor <- factor(ifelse(dataSB$spread > 3, 1,0))
#View(dataSB[11,])
dataSB <- dataSB[11,] #1 row dataframe of Cheifs vs Bucs
#names(masterframe)==names(dataSB) #test of masterframe colnames equal dataSB
masterframe %>%
select(c(totalpts,spread)) %>%
boxplot()
for(i in 1:10){}
print(i)
library(ggplot2)
rpois(20, rate = 2)
rpois(20, 2)
rbinom(100,10,0.5)
c(1,5:10)
summer <- data.frame(Temp = c(79,67,70,78,77,68), Month = c(8,9,9,8,8,9))
t.test(Temp~Month, data = summer)
t.test(Temp, y= Month, data = summer)
t.test(x= Temp, y= Month, data = summer)
library(dplyr)
summer %>% sample_slice(n=2)
summer %>% slice_sample(n=2)
as.numeric('50') +20
numbers <- list(
x = c(1, 2, 3),
y = c('one', 'two', 'three'),
z = c('uno', 'dos', 'tres')
)
names(numbers)
measures_of_center <- function(x){
c(mean = mean(x), median = median(x))
}
vectors <- list(
A = c(9, 1, 8, 4, 3),
B = c(7,  3,  4,  4,  1,  1, 10,  8)
)
lapply(vectors, measures_of_center)
rep(5,4)
x<- rep(TRUE, 50)
length(x)
x
sum(1,5)
values <- list(
A = c(9, 1, 8, 4, 3),
B = c(7,  3,  4,  4,  1,  1, 10,  8)
)
lapply(values, sum(values,5))
lapply(values, 5)
lapply(values, FUN = function(x) x+5)
library(dplyr)
day <- "Sunday"
case_when
(
day == "Saturday" ~ "Weekend",
day == "Sunday" ~ "Weekend",
TRUE ~ "Weekday"
)
day <- "Sunday"
case_when
(
day == "Saturday" ~ "Weekend",
day == "Sunday" ~ "Weekend",
TRUE ~ "Weekday"
)
case_when
(
day == "Saturday" ~ "Weekend",
day == "Sunday" ~ "Weekend",
TRUE ~ "Weekday"
)
case_when(
day == "Saturday" ~ "Weekend",
day == "Sunday" ~ "Weekend",
TRUE ~ "Weekday")
df <- data.frame(
x = 1:5
)
df$y <- c(6,7,8,9,10)
df
normalize
<-
function(x)
{
nominator <- x-min(x)
denominator <- max(x)-min(x)
normalize <- nominator/denominator
return(normalize)
}
normalize(df)
x <- 1
numeric(x)
is.numeric(x)
!is.numeric(x)
as_tibble(energy = c(2,1,1), protein=c(5,5,5))
vectors <- list(
A = c(9, 1, 8, 4, 3),
B = c(7,  3,  4,  4,  1,  1, 10,  8)
)
sapply(vectors, mean)
values <- list(
A = c(9, 1, 8, 4, 3),
B = c(7,  3,  4,  4,  1,  1, 10,  8)
)
lapply(values, FUN = function(x) x+5)
as.numeric('50')
seq(6:10)
seq(6:10)
seq(from =6, to = 10)
values <- list(
A = c(9, 1, 8, 4, 3),
B = c(7,  3,  4,  4,  1,  1, 10,  8)
)
lapply(values, FUN = function(x) x+5)
x <- c(1, 2, 3, 4)
4 != x
[4]x
rep(TRUE, 50)
error_function <- function() stop("I only generate errors!")
t <- class(error_function() , silent = TRUE)
x <- 4
is.numeric(x)
mtcars %>%
lm(mpg ~ wt, data = mtcars) %>%
coef()
mtcars %>%
lm(mpg ~ wt, data = data) %>%
coef()
zero(10)
rep(10)
numeric(10)
library(dplyr)
rbind(data,data2010)
setwd("~/NBA All-NBA team prediction")
### Library ###
library(rvest)
library(dplyr)
library(ggplot2)
### Data Collection and Cleaning ###
Season <- seq(10,21)
Data <- data.frame()
AllNBATeams <- read_html("https://www.basketball-reference.com/awards/all_league.html")
AllNBATeams <- AllNBATeams %>%
html_nodes("#awards_all_league") %>%
html_table()
AllNBATeams <- AllNBATeams[[1]]
names(AllNBATeams) <- c("Season", "Lg","Team","C","PF","SF","SG","PG")
AllNBATeams <- AllNBATeams %>%
mutate(C = substr(C,1,nchar(C)-2),
PF = substr(PF,1,nchar(PF)-2),
SF = substr(SF,1,nchar(SF)-2),
SG = substr(SG,1,nchar(SG)-2),
PG = substr(PG,1,nchar(PG)-2),
Season = substr(Season, nchar(Season)-1,nchar(Season)))
for (i in Season){
NBA <- read_html(paste0("https://www.basketball-reference.com/leagues/NBA_20",i,"_per_game.html"))
NBA <- NBA %>%
html_nodes("#per_game_stats") %>%
html_table()
NBA <- NBA[[1]]
NBA <- NBA %>% distinct(Player, .keep_all = TRUE) %>% mutate(Season = i) %>% filter(Rk != "Rk")
NBA$Player <- str_replace(NBA$Player, '\\*', '')
NBA <- NBA %>% mutate(FirstTm = ifelse(Player %in% (AllNBATeams %>% filter(Season == i, Team == "1st")),1,0),
SecondTm = ifelse(Player %in% (AllNBATeams %>% filter(Season == i, Team == "2nd")),1,0),
ThirdTm = ifelse(Player %in% (AllNBATeams %>% filter(Season == i, Team == "3rd")),1,0),
AnyTm = ifelse(FirstTm+SecondTm+ThirdTm > 0,1,0))
Data <- rbind(Data, NBA)
print(paste0("Year 20",i," added"))
}
Data_Clean <- Data %>%
select(-c(Rk,Player, Pos, Tm)) %>%
mutate(AnyTm = as.factor(AnyTm)) %>%
mutate_if(is.character, as.numeric) %>%
replace(is.na(.),0) %>%
rename("FG_Perc" = "FG%",
"2P_Perc" = "2P%",
"3P_Perc" = "3P%",
"eFG_Perc" = "eFG%",
"FT_Perc" = "FT%")
Data_Clean <- cbind(Data[,c(2,3,5)], Data_Clean)
summary(Data_Clean)
View(Data_Clean)
Data_Clean %>% filter(AnyTm == 1) %>% group_by(Season) %>% summarize(yes = sum(AnyTm==1), m = mean(GS), low = min(GS), high=max(GS))
### Data exploration ###
AllNBA <- Data_Clean %>%
filter(GS > 40) %>%
select(-c(Player, Pos, Tm, Season, FirstTm, SecondTm, ThirdTm))
AllNBA_Summary <- AllNBA %>%
group_by(AnyTm) %>%
summarize(Tot = n(),
Proportion = n()/nrow(AllNBA),
PPG = mean(PTS),
FG = mean(FG_Perc),
RPG = mean(TRB),
APG = mean(AST))
AllNBA_Summary
ShootingPlot <- ggplot(AllNBA, aes(x= FG_Perc, y = PTS, color = AnyTm)) + geom_point()
ShootingPlot
#Normalize based on season to get sense of rank within leage at the time to increase accuracy at the sacrifice of readability?
set.seed(1)
train_rows <- sample(nrow(AllNBA), 0.6*nrow(AllNBA))
rf_train <- AllNBA[train_rows,]
rf_test <- AllNBA[-train_rows,]
library(randomForest)
rf <- randomForest(AnyTm ~., data=rf_train, importance = TRUE)
print(rf)
setwd("~/NBA All-NBA team prediction")
### Library ###
library(rvest)
library(dplyr)
library(ggplot2)
### Data Collection and Cleaning ###
Season <- seq(10,21)
Data <- data.frame()
AllNBATeams <- read_html("https://www.basketball-reference.com/awards/all_league.html")
AllNBATeams <- AllNBATeams %>%
html_nodes("#awards_all_league") %>%
html_table()
AllNBATeams <- AllNBATeams[[1]]
names(AllNBATeams) <- c("Season", "Lg","Team","C","PF","SF","SG","PG")
AllNBATeams <- AllNBATeams %>%
mutate(C = substr(C,1,nchar(C)-2),
PF = substr(PF,1,nchar(PF)-2),
SF = substr(SF,1,nchar(SF)-2),
SG = substr(SG,1,nchar(SG)-2),
PG = substr(PG,1,nchar(PG)-2),
Season = substr(Season, nchar(Season)-1,nchar(Season)))
for (i in Season){
NBA <- read_html(paste0("https://www.basketball-reference.com/leagues/NBA_20",i,"_per_game.html"))
NBA <- NBA %>%
html_nodes("#per_game_stats") %>%
html_table()
NBA <- NBA[[1]]
NBA <- NBA %>% distinct(Player, .keep_all = TRUE) %>% mutate(Season = i) %>% filter(Rk != "Rk")
NBA$Player <- str_replace(NBA$Player, '\\*', '')
NBA <- NBA %>% mutate(FirstTm = ifelse(Player %in% (AllNBATeams %>% filter(Season == i, Team == "1st")),1,0),
SecondTm = ifelse(Player %in% (AllNBATeams %>% filter(Season == i, Team == "2nd")),1,0),
ThirdTm = ifelse(Player %in% (AllNBATeams %>% filter(Season == i, Team == "3rd")),1,0),
AnyTm = ifelse(FirstTm+SecondTm+ThirdTm > 0,1,0))
Data <- rbind(Data, NBA)
print(paste0("Year 20",i," added"))
}
library(stringr)
for (i in Season){
NBA <- read_html(paste0("https://www.basketball-reference.com/leagues/NBA_20",i,"_per_game.html"))
NBA <- NBA %>%
html_nodes("#per_game_stats") %>%
html_table()
NBA <- NBA[[1]]
NBA <- NBA %>% distinct(Player, .keep_all = TRUE) %>% mutate(Season = i) %>% filter(Rk != "Rk")
NBA$Player <- str_replace(NBA$Player, '\\*', '')
NBA <- NBA %>% mutate(FirstTm = ifelse(Player %in% (AllNBATeams %>% filter(Season == i, Team == "1st")),1,0),
SecondTm = ifelse(Player %in% (AllNBATeams %>% filter(Season == i, Team == "2nd")),1,0),
ThirdTm = ifelse(Player %in% (AllNBATeams %>% filter(Season == i, Team == "3rd")),1,0),
AnyTm = ifelse(FirstTm+SecondTm+ThirdTm > 0,1,0))
Data <- rbind(Data, NBA)
print(paste0("Year 20",i," added"))
}
Data_Clean <- Data %>%
select(-c(Rk,Player, Pos, Tm)) %>%
mutate(AnyTm = as.factor(AnyTm)) %>%
mutate_if(is.character, as.numeric) %>%
replace(is.na(.),0) %>%
rename("FG_Perc" = "FG%",
"2P_Perc" = "2P%",
"3P_Perc" = "3P%",
"eFG_Perc" = "eFG%",
"FT_Perc" = "FT%")
Data_Clean <- cbind(Data[,c(2,3,5)], Data_Clean)
summary(Data_Clean)
setwd("~/NBA All-NBA team prediction")
### Library ###
library(rvest)
library(dplyr)
library(ggplot2)
library(stringr)
### Data Collection and Cleaning ###
Season <- seq(10,21)
Data <- data.frame()
AllNBATeams <- read_html("https://www.basketball-reference.com/awards/all_league.html")
AllNBATeams <- AllNBATeams %>%
html_nodes("#awards_all_league") %>%
html_table()
AllNBATeams <- AllNBATeams[[1]]
names(AllNBATeams) <- c("Season", "Lg","Team","C","PF","SF","SG","PG")
AllNBATeams <- AllNBATeams %>%
mutate(C = substr(C,1,nchar(C)-2),
PF = substr(PF,1,nchar(PF)-2),
SF = substr(SF,1,nchar(SF)-2),
SG = substr(SG,1,nchar(SG)-2),
PG = substr(PG,1,nchar(PG)-2),
Season = substr(Season, nchar(Season)-1,nchar(Season)))
for (i in Season){
NBA <- read_html(paste0("https://www.basketball-reference.com/leagues/NBA_20",i,"_per_game.html"))
NBA <- NBA %>%
html_nodes("#per_game_stats") %>%
html_table()
NBA <- NBA[[1]]
NBA <- NBA %>% distinct(Player, .keep_all = TRUE) %>% mutate(Season = i) %>% filter(Rk != "Rk")
NBA$Player <- str_replace(NBA$Player, '\\*', '')
NBA <- NBA %>% mutate(FirstTm = ifelse(Player %in% (AllNBATeams %>% filter(Season == i, Team == "1st")),1,0),
SecondTm = ifelse(Player %in% (AllNBATeams %>% filter(Season == i, Team == "2nd")),1,0),
ThirdTm = ifelse(Player %in% (AllNBATeams %>% filter(Season == i, Team == "3rd")),1,0),
AnyTm = ifelse(FirstTm+SecondTm+ThirdTm > 0,1,0))
Data <- rbind(Data, NBA)
print(paste0("Year 20",i," added"))
}
Data_Clean <- Data %>%
select(-c(Rk,Player, Pos, Tm)) %>%
mutate(AnyTm = as.factor(AnyTm)) %>%
mutate_if(is.character, as.numeric) %>%
replace(is.na(.),0) %>%
rename("FG_Perc" = "FG%",
"2P_Perc" = "2P%",
"3P_Perc" = "3P%",
"eFG_Perc" = "eFG%",
"FT_Perc" = "FT%")
Data_Clean <- cbind(Data[,c(2,3,5)], Data_Clean)
summary(Data_Clean)
View(Data_Clean)
Data_Clean %>% filter(AnyTm == 1) %>% group_by(Season) %>% summarize(yes = sum(AnyTm==1), m = mean(GS), low = min(GS), high=max(GS))
### Data exploration ###
AllNBA <- Data_Clean %>%
filter(GS > 40) %>%
select(-c(Player, Pos, Tm, Season, FirstTm, SecondTm, ThirdTm))
AllNBA_Summary <- AllNBA %>%
group_by(AnyTm) %>%
summarize(Tot = n(),
Proportion = n()/nrow(AllNBA),
PPG = mean(PTS),
FG = mean(FG_Perc),
RPG = mean(TRB),
APG = mean(AST))
AllNBA_Summary
ShootingPlot <- ggplot(AllNBA, aes(x= FG_Perc, y = PTS, color = AnyTm)) + geom_point()
ShootingPlot
#Normalize based on season to get sense of rank within leage at the time to increase accuracy at the sacrifice of readability?
View(AllNBA)
AllNBA_predictors <- AllNBA %>% select(-c(AnyTm))
ALLNBA_pca <- prcomp(AllNBA_predictors, center = TRUE, scale. = TRUE)
AllNBA_pca <- prcomp(AllNBA_predictors, center = TRUE, scale. = TRUE)
summary(AllNBA_pca)
prop_var <- tibble(sdev = AllNBA_pca$sdev, pca_comp = 1:n())
prop_var <- prop_var %>%
mutate(pcVar = sdev^2, propVar_ex = pcVar/sum(pcVar), pca_comp = as.character(pca_comp))
prop_var <- tibble(sdev = AllNBA_pca$sdev, pca_comp = 1:26)
prop_var <- prop_var %>%
mutate(pcVar = sdev^2, propVar_ex = pcVar/sum(pcVar), pca_comp = as.character(pca_comp))
ggplot(prop_var, aes(pca_comp, propVar_ex, group =1)) + geom_line() + geom_point()
autoplot(AllNBA_pca, data = AllNBA, colour = 'AnyTm')
summary(AllNBA_pca)
prop_var <- tibble(sdev = AllNBA_pca$sdev)
prop_var <- prop_var %>%
mutate(pca_comp = 1:n(),pcVar = sdev^2, propVar_ex = pcVar/sum(pcVar), pca_comp = as.character(pca_comp))
prop_var$pcVar
prop_var$pcVar*100
ggplot(data= prop_var, aes(prop_var$pcVar)) + geom_line()
ggplot(data= prop_var, aes(y=prop_var$pcVar, x=1:26)) + geom_line()
ggplot(prop_var, aes(pca_comp, propVar_ex, group =1)) + geom_line() + geom_point()
prop_var <- prop_var %>%
mutate(pca_comp = 1:n(),pcVar = sdev^2, propVar_ex = pcVar/sum(pcVar), pca_comp = pca_comp)
ggplot(data= prop_var, aes(y=prop_var$pcVar, x=1:26)) + geom_line()
ggplot(prop_var, aes(pca_comp, propVar_ex, group =1)) + geom_line() + geom_point()
summary(AllNBA_pca)
print(AllNBA_pca)
summary(AllNBA_pca)
View(AllNBA)
set.seed(1)
train_rows <- sample(nrow(AllNBA), 0.6*nrow(AllNBA))
rf_train <- AllNBA[train_rows,]
rf_test <- AllNBA[-train_rows,]
library(randomForest)
rf <- randomForest(AnyTm ~., data=rf_train, importance = TRUE)
View(AllNBA)
rf <- randomForest(AnyTm ~., data=rf_train, importance = TRUE)
View(Data)
Data_Clean <- Data %>%
select(-c(Rk,Player, Pos, Tm)) %>%
mutate(AnyTm = as.factor(AnyTm)) %>%
mutate_if(is.character, as.numeric) %>%
replace(is.na(.),0) %>%
str_replace(.vars,"%","Percent")
Data_Clean <- Data %>%
select(-c(Rk,Player, Pos, Tm)) %>%
mutate(AnyTm = as.factor(AnyTm)) %>%
mutate_if(is.character, as.numeric) %>%
replace(is.na(.),0) %>%
rename_all(funs(str_replace_all(., "%", "Percentage"))) %>%
rename_all(funs(str_replace_all(., "3", "Three"))) %>%
rename_all(funs(str_replace_all(., "2", "Two")))
View(Data_Clean)
Data_Clean <- cbind(Data[,c(2,3,5)], Data_Clean)
summary(Data_Clean)
#View(Data_Clean)
Data_Clean %>% filter(AnyTm == 1) %>% group_by(Season) %>% summarize(yes = sum(AnyTm==1), m = mean(GS), low = min(GS), high=max(GS))
AllNBA <- Data_Clean %>%
filter(GS > 40) %>%
select(-c(Player, Pos, Tm, Season, FirstTm, SecondTm, ThirdTm))
AllNBA_Summary <- AllNBA %>%
group_by(AnyTm) %>%
summarize(Tot = n(),
Proportion = n()/nrow(AllNBA),
PPG = mean(PTS),
FG = mean(FG_Perc),
RPG = mean(TRB),
APG = mean(AST))
AllNBA_Summary
ShootingPlot <- ggplot(AllNBA, aes(x= FG_Perc, y = PTS, color = AnyTm)) + geom_point()
ShootingPlot
ShootingPlot <- ggplot(AllNBA, aes(x= FGPercentage, y = PTS, color = AnyTm)) + geom_point()
ShootingPlot
AllNBA_predictors <- AllNBA %>% select(-c(AnyTm))
AllNBA_pca <- prcomp(AllNBA_predictors, center = TRUE, scale. = TRUE)
summary(AllNBA_pca)
print(AllNBA_pca)
prop_var <- tibble(sdev = AllNBA_pca$sdev)
prop_var <- prop_var %>%
mutate(pca_comp = 1:n(),pcVar = sdev^2, propVar_ex = pcVar/sum(pcVar), pca_comp = pca_comp)
set.seed(1)
train_rows <- sample(nrow(AllNBA), 0.6*nrow(AllNBA))
rf_train <- AllNBA[train_rows,]
rf_test <- AllNBA[-train_rows,]
library(randomForest)
rf <- randomForest(AnyTm ~., data=rf_train, importance = TRUE)
print(rf)
importance(rf)
rf_imp <- importance(rf)
rf_imp
str(rf_imp)
rf_imp <- as.data.frame(importance(rf))
str(rf_imp)
rf_imp <- rf_imp %>% order(MeanDecreaseGini, decreasing = TRUE)
rf_imp <- as.data.frame(importance(rf))
rf_imp <- rf_imp %>% order(MeanDecreaseGini, decreasing = TRUE)
colnames(rf_imp)
rf_imp <- rf_imp %>% select((order(colnames(MeanDecreaseGini))))
rf_imp <- rf_imp %>% select((order(colnames(MeanDecreaseGini))))
rf_imp <- rf_imp[,order(colnames("MeanDecreaseGini"))]
rf_imp <- rf_imp[,order(colnames(MeanDecreaseGini))]
rf_imp <- rf_imp[,order(colnames(0))]
rf_imp <- rf_imp[,order(colnames(rf_imp$MeanDecreaseGini))]
View(rf_imp)
